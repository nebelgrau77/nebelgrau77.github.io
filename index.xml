<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NBG77</title>
    <link>https://nebelgrau77.github.io/</link>
    <description>Recent content on NBG77</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Feb 2021 21:58:01 +0100</lastBuildDate>
    
	<atom:link href="https://nebelgrau77.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Second_post</title>
      <link>https://nebelgrau77.github.io/posts/second_post/</link>
      <pubDate>Wed, 17 Feb 2021 20:58:35 +0100</pubDate>
      
      <guid>https://nebelgrau77.github.io/posts/second_post/</guid>
      <description>Some more testing if this works.</description>
    </item>
    
    <item>
      <title>First post</title>
      <link>https://nebelgrau77.github.io/posts/frist_psot/</link>
      <pubDate>Wed, 17 Feb 2021 13:12:05 +0100</pubDate>
      
      <guid>https://nebelgrau77.github.io/posts/frist_psot/</guid>
      <description>My embedded experiments This is yet another test of what I would like to show here. I want to talk about tinkering with embedded devices in Rust. Why embedded, and why Rust? Because:
 it&amp;rsquo;s cool I like it I&amp;rsquo;m learning new things!  So in embedded Rust, you start with something like this:
#[no_main] #[no_std] use panic_halt as _; And after you add some more code to initialize various element of the microcontroller and such, you can see something like this:</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://nebelgrau77.github.io/about/</link>
      <pubDate>Tue, 16 Feb 2021 21:58:01 +0100</pubDate>
      
      <guid>https://nebelgrau77.github.io/about/</guid>
      <description>Hello, world! I added some tweaks to the theme, hopefully they work :)
Let&amp;rsquo;s see if I can use markdown:
A code example  short simple  print(&amp;#39;Hello, world!&amp;#39;) </description>
    </item>
    
  </channel>
</rss>